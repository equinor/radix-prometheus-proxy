on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

name: Release

jobs:
  release-please:
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    runs-on: ubuntu-latest
    outputs:
      pkg-version: ${{ steps.get-version.outputs.pkg-version }}
      version: ${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }}
      release_created : ${{ steps.release.outputs.release_created  }}
    steps:
      - uses: actions/checkout@v4
      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - uses: googleapis/release-please-action@v4
        id: release
      - run: |
          echo "${{ toJSON(steps.release.outputs) }}"

      # Docker build
      - name: Set up Docker Buildx
        if: ${{ steps.release.outputs.release_created }}
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        if: ${{ steps.release.outputs.release_created }}
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        if: ${{ steps.release.outputs.release_created }}
        env:
          VERSION: v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }}
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{env.VERSION}}"
          platforms: |
            linux/amd64
            linux/arm64


      - name: Install Helm
        uses: azure/setup-helm@v4
        if: ${{ steps.release.outputs.release_created }}
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        if: ${{ steps.release.outputs.release_created }}
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
